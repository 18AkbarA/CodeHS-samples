
import java.util.*;



import java.io.*;



public class Battleship
{
	
    Player thePlayer = new Player();
    boolean playerCanContinue = false;
    
    
    Player opponent = new Player();
    boolean opponentCanContinue = false;
    
    boolean guessStage = true;
    boolean playerGuessStage = true;
    
    boolean opponentGuessStage = true;
    
    boolean playerGuess = true;
    
    public String[] directions = {"horizontal","vertical"};
    
    Scanner scanner = new Scanner(System.in);
    public String readLine(String text){
    	System.out.print(text);
    	String nexttyped = scanner.next();

    		return nexttyped;
    	
    }
    
    public static void main(String[] args)
	{
		//System.out.println("Test");
		 Battleship BattleshipGame =new Battleship();
		 BattleshipGame.run();
		
	}
    
    public void delayTime(int delayTime){
    	try {
    	    Thread.sleep(delayTime);                 
    	} catch(InterruptedException ex) {
    	    Thread.currentThread().interrupt();
    	}
    }
    public void run()
    {
        // Start here! This class should interact with the user
        // to play the game of Battleship
        
        // You only need to allow for the user to set up each player's
        // ships and for each player to make a guess on the other player's grid
        // Don't worry about finishing the whole game yet.
        
        // You will probably need to make additions to the Player class to
        // allow for this setting up and guessings
        
        
        System.out.println("Welcome to Battleship!");
        delayTime(1000);
        System.out.println("At this stage, you must add your ships");
        System.out.println("You must add all 5 ships with lengths: 2,3,3,4,5");
        delayTime(1000);
        System.out.println("Add a ship using this format:");
        
        System.out.println("Shiplength:StartingLocation:direction");
        
        System.out.println("For example: 4:A3:vertical");
        delayTime(1000);
        System.out.println("Type 'shipsleft' to see how many ships you have to add.");
        
        delayTime(1000);
        System.out.println("The next stage will start after you have added all 5 ships.");
        
        delayTime(1000);
        System.out.println("Current status:");
        thePlayer.printMyShips();
        
        while(playerCanContinue == false){
            
            String shipPlace = readLine("Add a ship: ").toLowerCase();
            
            if(shipPlace.equals("shipsleft") || shipPlace.equals("'shipsleft'")){
                int totalShips = thePlayer.playerGrid.totalShips;
                int shipsLeft = 5 - totalShips;
                if (shipsLeft == 1){
                    System.out.println("You still need to add 1 more ship!");
                }
                else{
                   System.out.println("You still need to add "+shipsLeft+" more ships!"); 
                }
            }
            else{
               
                thePlayer.putDownShip(shipPlace);
            }
            
            if(thePlayer.playerGrid.totalShips == 5){
            	System.out.println("You have placed all of your ships! The next stage will commence!");
            	playerCanContinue = true;
            }
        }
        delayTime(1000);
        System.out.println("Ready? Let us begin, then!");
        delayTime(1000);
        System.out.println("It is now time for your opponent to place ships!");
        delayTime(1000);
        
        while(opponentCanContinue == false){
            
            //int[]shipLengths = {2,3,3,4,5};
            
            int randomShipLength = Randomizer.nextInt(2,5);
            
            int charNumb = 97 + Randomizer.nextInt(0,9);
            
            char randomShipChar = (char)charNumb;
            
            int columnNumb = Randomizer.nextInt(1,10);
            
            int RandDirNumb = Randomizer.nextInt(4,7);
            
            int dirNumb = 0;
            if (RandDirNumb == 4 || RandDirNumb == 7){
            	dirNumb = 1;
            }
            
            String shipDir = directions[dirNumb];
            
            String shipPlace = "" + randomShipLength+":"+randomShipChar + columnNumb+":" + shipDir;
            
            
            opponent.showOutput = false;
            opponent.playerGrid.showOutput = false;
            
            opponent.putDownShip(shipPlace);
            if(opponent.playerGrid.totalShips == 5){
            	System.out.print("Your opponent is thinking");
            	for(int i = 0; i < 7; i++){
            		delayTime(1000);
            		System.out.print(".");
            	}
            	System.out.print("\n");
                System.out.println("You opponent has put all ships down!");
                
                opponent.showOutput = true;
                opponent.playerGrid.showOutput = true;
                
                opponentCanContinue = true;
            }
        }
        
    	delayTime(1000);
    	System.out.println("It is time for you to guess now!");
    	
    	System.out.println("Current opponent grid:");
    	opponent.playerGrid.printStatus();
        while(guessStage){
        	

        	
        	while(playerGuess){
        		String guess = readLine("Enter your guess:");
        		getGuess(guess);
        	

        	}
    		System.out.println("Current opponent grid:");
    		opponent.playerGrid.printStatus();
        	delayTime(1000);
        	System.out.print("It is time for your opponent to guess");
        	
        	for (int i = 0; i < 4; i++){
        		delayTime(1000);
        		System.out.print(".");
        	}
        	System.out.print("\n");
        	randomGuess();
        	
        	System.out.println("Your current grid:");
        	thePlayer.playerGrid.printStatus();
        	playerGuess = true;
        	
        	if(thePlayer.hitShips == 17){
        		guessStage = false;
        		playerWins();
        	}
        	else if(opponent.hitShips == 17){
        		guessStage = false;
        		opponentWins();
        	}
        	
        }
    }
       
        
   
    
    public void playerWins(){
    	System.out.println("You won! Congrats!");
    }
    public void opponentWins(){
    	System.out.println("You're opponent won! That's kinda sad...");
    }
    public void randomGuess(){
    	boolean opponentisGuessing = true;
    	while(opponentisGuessing){
    		
    		
    		int randOne = Randomizer.nextInt(0,9);
    		int randTwo = Randomizer.nextInt(0,9);
    		
    		char rowChar = (char)(65 + randOne);
    		int columnNumb = randTwo + 1;
    		
    		if (thePlayer.playerGrid.alreadyGuessed(randOne, randTwo)){
    			
    		}
    		else{
    			System.out.println("Opponent guessed "+ rowChar + columnNumb);
    			opponent.askForGuess(randOne,randTwo,thePlayer);
    			opponentisGuessing = false;
    		}
    		
    	}
    	
    }
    public void getGuess(String guess){
    	if (guess.length() != 2 && guess.length() != 3){
    		thePlayer.checkSynthax();
    	}
    	
    	else{
    		String firstChar = "" + guess.charAt(0);
    		int rowNumb = thePlayer.convertToInt(firstChar);
    		
    		int colNumb = (Integer.parseInt(guess.replace(firstChar, "")) - 1);
    		
    		if (rowNumb < 0 || rowNumb > 9 || colNumb < 0 || colNumb > 9){
    			thePlayer.checkSynthax();
    		}
    		
    		else{
        		if (opponent.playerGrid.alreadyGuessed(rowNumb, colNumb)){
        			System.out.println("That space has already been guessed!");
        		}
        		else{
        			thePlayer.askForGuess(rowNumb,colNumb,opponent);
        			playerGuess = false;
        		}
    		}
    		
    	}
    }
        
    

}
